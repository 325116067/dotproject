<?php
/**
 * The SearchFilter view displays a text box and a button for text searching
 * 
 * DP_View_SearchFilter supports searching by substring and accepts a default field to search
 * (usually an object name).
 * 
 * @package dotproject
 * @subpackage system
 * @todo Implement searching multiple fields
 *
 */
class DP_View_SearchFilter extends DP_View_Stateful {
	/**
	 * @var array $current_filter Filter rule generated by this SearchFilter view on last submit.
	 * @todo Write better system for each view to get its own state without explicitly defining POST vars.
	 */
	protected $current_filter;
	protected $form_reset_var;
	protected $form_input_text;
	
	/**
	 * DP_View_SearchFilter constructor
	 * 
	 * @param string $id identifier for this SearchFilter view.
	 * @param DP_Filter $filter current state of this filter.
	 * @return Instance of DP_View_SearchFilter
	 */
	public function __construct($id, DP_Filter $filter) {
		parent::__construct($id);
		$this->current_filter = $filter;
		$this->width = "100%";
		$this->form_reset_var = $this->id().'-reset';
		$this->form_input_text = $this->id().'-input';
	}
	
	/**
	 * Render this view to HTML
	 * 
	 * @return string HTML output
	 * @todo Use a small template for this output.
	 */
	public function render() {
		$search_filter = $this->current_filter->getFilter('c.company_name');
		$search_text = $search_filter['field_value'];
		$output = '<div>';
		$output .= '<form method="POST">';
		
		$output .= '<input type="text" name="'.$this->form_input_text.'" size="25" value="'.$search_text.'" ';
		$output .= ($search_text != '') ? 'disabled' : '';
		$output .= '/>';

		$output .= '<input type="hidden" name="'.$this->id().'" value="companieslistview">';
		$output .= '<input type="hidden" name="'.$this->form_reset_var.'" id="'.$this->form_reset_var.'" value="0">';
		$output .= '<input type="button" value="reset" onClick="document.getElementById(\''.$this->form_reset_var.'\').value = 1;this.form.submit();" />';
		$output .= '<input type="submit" value="search" />';
		$output .= '</form>';
		$output .= '</div>';
		
		return $output;
	}
	/**
	 * Reset the state of the SearchFilter
	 */
	public function reset() {
	
	}
	
	// Methods inherited from DP_View_Stateful
	
	public function saveState() {
		
	}
	
	/**
	 * Update the filter from server request variables.
	 */
	public function updateStateFromServer($request) {
		// Clear filters if requested
		$reset_this = $this->form_reset_var;
		
		if ($request->$reset_this) {
			$this->current_filter->deleteAllRules();
		}
		
		// Add search string if requested
		// TODO - decide if search strings should be cumulative?
		$input_text = $this->form_input_text;
		
		if ($request->$input_text != '') {
			$this->current_filter->fieldSubstring('c.company_name', $request->$input_text);
		}
	}
}
?>